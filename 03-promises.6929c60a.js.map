{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAC/BC,iBAAiB,UAKxB,SAAoBC,GAClBA,EAAMC,iBACN,IAAgCC,EAAAF,EAAMG,cAA9BC,EAAwBF,EAAxBG,MAAOC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACrBC,EAAWC,OAAOL,EAAMM,OACxBC,EAAUF,OAAOH,EAAKI,OACtBE,EAAYH,OAAOF,EAAOG,OAC1B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACnCC,EAAcD,EAAGL,GACdO,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUZ,EAAKW,EAALX,MACjBV,EAAAuB,OAAOC,QAAQ,uBAAwCC,OAAfH,EAAS,QAAYG,OAANf,EAAM,M,IAE9DgB,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUZ,EAAKW,EAALX,MAClBV,EAAAuB,OAAOI,QAAQ,sBAAqCF,OAAfH,EAAS,QAAYG,OAANf,EAAM,M,IAE9DG,GAAYG,EAEdX,EAAMG,cAAcoB,O,IAnBtB,IAAIf,EAAW,KACXG,EAAU,KACVC,EAAY,KAoBhB,SAASE,EAAcG,EAAUZ,GAC/B,OAAO,IAAImB,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAER,WAAUZ,UAEpBqB,EAAO,CAAET,WAAUZ,S,GAEpBA,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', formSabmit);\n\nlet delayVal = null;\nlet stepVal = null;\nlet amountVal = null;\nfunction formSabmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  delayVal = Number(delay.value);\n  stepVal = Number(step.value);\n  amountVal = Number(amount.value);\n  for (let i = 1; i <= amountVal; i += 1) {\n    createPromise(i, delayVal)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delayVal += stepVal;\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","document","querySelector","addEventListener","event","preventDefault","_currentTarget","currentTarget","delay1","delay","step","amount","$ce04d3a99e08e73b$var$delayVal","Number","value","$ce04d3a99e08e73b$var$stepVal","$ce04d3a99e08e73b$var$amountVal","i","$ce04d3a99e08e73b$var$createPromise","then","param","position","Notify","success","concat","catch","failure","reset","Promise","resolve","reject","setTimeout","Math","random"],"version":3,"file":"03-promises.6929c60a.js.map"}